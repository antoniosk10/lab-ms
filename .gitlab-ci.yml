image: docker:latest

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""
  NAMESPACE: "lms-services"

services:
  - docker:23.0.1-dind
before_script:
  - apk update && apk --no-cache --update add build-base openssh curl

stages:
  - test
  - build
  - deploy

test:
  image: node:10
  stage: test
  script:
    - yarn install
    - yarn test
  coverage: '/^All files\s*\|\s*(\d+\.*\d+)/'

build_image_prod:
  stage: build
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_PIPELINE_SOURCE == "push"
  script:
    - docker login $CI_REGISTRY --username $CI_REGISTRY_USER --password $CI_REGISTRY_PASSWORD
    - docker build --rm -t ${REGISTRY}/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$CI_PIPELINE_IID .
    - docker tag ${REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}:$CI_PIPELINE_IID ${REGISTRY}/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:${ENV_TAG}
    - docker push ${REGISTRY}/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$CI_PIPELINE_IID
    - docker push ${REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}:${ENV_TAG}

deploy_to_prod:
  stage: deploy
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
  script:
    - curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
    - chmod +x ./kubectl && mkdir -p ~/.kube && mv ./kubectl ~/.kube && export PATH=$PATH:$HOME/.kube
    - cp $LMS_KUBECONFIG ~/.kube/config
    - DEPLOYMENT=$(echo $CI_PROJECT_NAME | sed s/_/-/g | sed s/fast-//g)
    - kubectl apply -f .kube/
    - kubectl set image -n $NAMESPACE deployment/$DEPLOYMENT $DEPLOYMENT=$CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$CI_PIPELINE_IID
    - rm -rf ~/.kube
